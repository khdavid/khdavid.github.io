%!PS-Adobe-2.0
%%Creator: dvips(k) 5.94a Copyright 2003 Radical Eye Software
%%Title: test.dvi
%%CreationDate: Tue May 22 15:40:50 2012
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: Times-Roman CMSY10 Symbol Times-Italic CMMI10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe test.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2012.05.22:1540
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0pre  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0pre",
%   date      = "30 October 2002",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 33 /arrowright put
dup 107 /bardbl put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC570317AAEA74A842CFD26F9591866F5A0
9B4EAD7395F5196B36997F1D59E88165C94739E74C2B40820F8C972B175ED79D
87C9E323C3CDD5C2BEE6409017767534E19F45AFCE2C6687733451AD2E75D112
42040BADFF90F5FCF0677E04D0E99358A8268147FB0BC093C9E6B3A686D273FF
8CAB1B38C943D6756EFF83760A0822AB4C2B5BE81D64C1AC67B3E8E667D6F1FF
8533A43741F7EEBA4F86D9C805D5B0D59E7CBC1E6BCD384DE24DB7D67EFEE2F6
00A1A7A4A134EA64D9D1484459CBD70C13FC27BD779BB5B95E9C0307F9DDFFDB
5EAFB43AC2948B4C647FC5CB7064F2965BC83288B2EDCEE76E58D0630F3DFEB6
ED65638F23F473E4CCD74D2A48EBCEF075766B82DCF585F486436565AFA4EA63
52D09025008AB5BB86BA3BB7ADD31C6ABCC039D0E639B4FF841A75E4B457C443
686E84DEC5009579B7ABBAC7389E9E82D9E54054AE7F8F01A63A18D12DA8681E
B9CFC98BC49F9CE95C3D6AB78A144380E9E6FACBD3DE52705D739E7710DCEA48
C76B06D01E5F9E305E5E252A345115D7B81ECF629931A5FF5552AA6F569E0F30
A6C7DD7E0A4B15783912F06436EFD18790656F3F9D5A6A3A4AF7EDEC2863CB12
D4056D2410
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 126 /vector put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
9560176676ABB71BBD0EE56B4CC492C0652750227CEC6A5AA6F16EBBA839F2EF
56F150AD308A59D91CE3931C8DB3C731BB91DA380612B1BC72B59956E110F45E
0CBB9A9C7F61F313CE167412558C5C65C76695ED76243F316E9E797221D9B4DF
0C4E9D1E7858EC529380944AECADBA0B7078A16C3255EA52F9B3FF1E167D5ABA
29A159219DC469678829F994DF49235D97219B91DD87DCDD7D31BA4F755F4109
28E4E2C8B2A5CC177081C8D96C31925F89CD7032D5ECB4FC3AED558AF66AD285
9CD2B0B871A0A6328E106C21C31C174471B825E8967A14F96BD34DEC14DC7F85
E9FBE5559491F6DA6ACC8354D9451DEE8DCF5234519A1565BE4A602E74467F7C
35954DA7B823A9BC3155D2EF1E94D9B854F594B4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39139632 55387786 1000 600 600 (test.dvi)
@start /Fa 205[33 33 49[{ TeXBase1Encoding ReEncodeFont }2
66.4176 /Times-Roman rf /Fc 148[33 107[{}1 66.4176 /CMSY10
rf /Fd 133[35 40 40 1[40 8[66 25 40 2[45 45 4[45 45 14[56
1[56 66 1[76 77[{ TeXBase1Encoding ReEncodeFont }15 90.9091
/Times-Italic rf /Fe 129[45 126[{}1 90.9091 /CMMI10 rf
/Ff 136[62 5[47 6[55 106[{ .167 SlantFont }3 90.9091
/Symbol rf /Fh 222[91 32[71{}2 90.9091 /CMSY10 rf /Fi
139[25 35 30 1[45 1[45 71 25 4[45 30 40 1[40 1[40 13[51
2[51 30[45 45 48[{ TeXBase1Encoding ReEncodeFont }16
90.9091 /Times-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 448 3460 a
 /PSfrag where{pop(a)[[0(Bl)1 0]](b)[[1(Bl)1 0]](bp)[[2(Bl)1 0]](x)[[3(Bl)1
0]](w)[[4(Bl)1 0]](theta)[[5(Bl)1 0]](y)[[6(Bl)1 0]](O)[[7(Bl)1 0]](v)[[8(Bl)1
0]](z)[[9(Bl)1 0]](0)[[10(Bl)1 0]](1)[[11(Bl)1 0]](h)[[12(Bl)1 0]](l)[[13(Bl)1
0]](k1)[[14(Bl)1 0]](k2)[[15(Bl)1 0]](o)[[16(Bl)1 0]](m)[[22(Bl)1 0]](M)[[18(Bl)1
0]](R)[[19(Bl)1 0]](P)[[20(Bl)1 0]](phi)[[21(Bl)1 0]](g)[[23(Bl)1 0]]23
0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 448 3460 a @beginspecial
212 @llx 307 @lly 254 @urx 372 @ury 1133 @rwi @setspecial
%%BeginDocument: springPendulum.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: 0.45.1
%%Pages: 1
%%Orientation: Portrait
%%BoundingBox: 212 307 254 372
%%HiResBoundingBox: 212.83066 307.50527 253.28025 371.39106
%%EndComments
%%Page: 1 1
0 842 translate
0.8 -0.8 scale
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave [1 0 0 1 0 0] concat
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
274.50895 591.03814 moveto
277.98135 592.11143 279.6781 592.15878 277.72093 593.42147 curveto
275.76375 594.68417 275.55067 595.63907 277.40525 596.18361 curveto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
276.90905 595.97841 moveto
280.38145 597.0517 282.0782 597.09905 280.12103 598.36174 curveto
278.16385 599.62444 277.95077 600.57934 279.80535 601.12388 curveto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
279.65541 601.15545 moveto
283.12781 602.22874 284.82456 602.27609 282.86739 603.53878 curveto
280.91021 604.80148 280.69713 605.75638 282.55171 606.30092 curveto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
282.33862 606.20621 moveto
285.81102 607.2795 287.50777 607.32685 285.5506 608.58954 curveto
283.59342 609.85224 283.38034 610.80714 285.23492 611.35168 curveto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
285.1481 611.35168 moveto
288.6205 612.42497 290.31725 612.47232 288.36008 613.73501 curveto
286.4029 614.99771 286.18982 615.95261 288.0444 616.49715 curveto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
287.93603 616.44123 moveto
291.40843 617.51452 293.10518 617.56187 291.14801 618.82456 curveto
289.19083 620.08726 288.97775 621.04216 290.83233 621.5867 curveto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
290.79318 621.57516 moveto
294.26558 622.64845 295.96233 622.6958 294.00516 623.95849 curveto
292.04798 625.22119 291.8349 626.17609 293.68948 626.72063 curveto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
293.6397 626.6618 moveto
297.1121 627.73509 298.80885 627.78244 296.85168 629.04513 curveto
294.8945 630.30783 294.68142 631.26273 296.536 631.80727 curveto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
296.29135 631.7757 moveto
299.76375 632.84899 301.4605 632.89634 299.50333 634.15903 curveto
297.54615 635.42173 297.33307 636.37663 299.18765 636.92117 curveto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
299.11907 636.88766 moveto
302.59147 637.96095 304.28822 638.0083 302.33105 639.27099 curveto
300.37387 640.53369 300.16079 641.48859 302.01537 642.03313 curveto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
301.90925 641.97695 moveto
305.38165 643.05024 307.0784 643.09759 305.12123 644.36028 curveto
303.16405 645.62298 302.95097 646.57788 304.80555 647.12242 curveto
stroke
gsave [0.6536882 0 0 0.9265872 104.5556 40.882561] concat
gsave
0 0 0 setrgbcolor
newpath
316.07142 654.01398 moveto
316.07142 656.55219 313.15142 658.61219 309.55356 658.61219 curveto
305.9557 658.61219 303.0357 656.55219 303.0357 654.01398 curveto
303.0357 651.47576 305.9557 649.41576 309.55356 649.41576 curveto
313.15142 649.41576 316.07142 651.47576 316.07142 654.01398 curveto
closepath
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1.9 setlinewidth
0 setlinejoin
0 setlinecap
newpath
316.07142 654.01398 moveto
316.07142 656.55219 313.15142 658.61219 309.55356 658.61219 curveto
305.9557 658.61219 303.0357 656.55219 303.0357 654.01398 curveto
303.0357 651.47576 305.9557 649.41576 309.55356 649.41576 curveto
313.15142 649.41576 316.07142 651.47576 316.07142 654.01398 curveto
closepath
stroke
grestore
0 0 0 setrgbcolor
[0.54935394 0.54935394] 0 setdash
0.18311799 setlinewidth
0 setlinejoin
0 setlinecap
newpath
275.1403 591.46391 moveto
275.1403 667.88904 lineto
stroke
gsave [1 0 0 -1 313.52609 649.81641] concat
gsave
/newlatin1font {findfont dup length dict copy dup /Encoding ISOLatin1Encoding put definefont} def
/Sans-ISOLatin1 /Sans newlatin1font
4 scalefont
setfont
0 0 0 setrgbcolor
newpath
0 0 moveto
(m) show
grestore
grestore
gsave [1 0 0 -1 299.51022 622.03717] concat
gsave
/Sans-ISOLatin1 findfont
4 scalefont
setfont
0 0 0 setrgbcolor
newpath
0 0 moveto
(l) show
grestore
grestore
0 0 0 setrgbcolor
[0.9 0.9] 0 setdash
0.30000001 setlinewidth
0 setlinejoin
0 setlinecap
newpath
275.08929 591.29075 moveto
306.875 647.2729 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
0.30000001 setlinewidth
0 setlinejoin
0 setlinecap
newpath
275.1403 601.89728 moveto
278.4233 602.21295 280.50674 600.25578 280.50674 600.25578 curveto
stroke
0 0 0 setrgbcolor
[] 0 setdash
0.40000001 setlinewidth
0 setlinejoin
0 setlinecap
newpath
266.23833 590.28053 moveto
268.1955 588.44963 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
0.40000001 setlinewidth
0 setlinejoin
0 setlinecap
newpath
266.23833 590.4068 moveto
284.92615 590.4068 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
0.40000001 setlinewidth
0 setlinejoin
0 setlinecap
newpath
268.79528 590.24896 moveto
270.75245 588.41806 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
0.40000001 setlinewidth
0 setlinejoin
0 setlinecap
newpath
271.13126 590.24895 moveto
273.08843 588.41805 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
0.40000001 setlinewidth
0 setlinejoin
0 setlinecap
newpath
273.59351 590.18582 moveto
275.55068 588.35492 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
0.40000001 setlinewidth
0 setlinejoin
0 setlinecap
newpath
275.74007 590.15426 moveto
277.69724 588.32336 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
0.40000001 setlinewidth
0 setlinejoin
0 setlinecap
newpath
277.91822 590.37523 moveto
279.87539 588.54433 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
0.40000001 setlinewidth
0 setlinejoin
0 setlinecap
newpath
280.7277 590.34366 moveto
282.68487 588.51276 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
0.40000001 setlinewidth
0 setlinejoin
0 setlinecap
newpath
283.15839 590.5015 moveto
285.11556 588.6706 lineto
stroke
gsave [1 0 0 -1 276.27673 607.89502] concat
gsave
/Sans-ISOLatin1 findfont
4 scalefont
setfont
0 0 0 setrgbcolor
newpath
0 0 moveto
(phi) show
grestore
grestore
grestore
showpage
%%EOF

%%EndDocument
 @endspecial 448 3460 a
 /End PSfrag
 448 3460 a 448 625 a
 /Hide PSfrag
 448 625
a -301 687 a Fi(PSfrag)23 b(replacements)p -301 721 750
4 v 448 724 a
 /Unhide PSfrag
 448 724 a 357 836 a
  {
 357 836 a -39 x Fh(\000)-71
b(!)380 836 y Fd(a)357 836 y
  } 0/Place PSfrag
 357 836 a 357 949 a
  {
 357
949 a -62 x Fh(\000)g(!)380 949 y Fd(b)357 949 y
  } 1/Place PSfrag
 357
949 a 320 1054 a
  {
 320 1054 a -62 x Fh(\000)g(!)343 1054
y Fd(b)411 1072 y Fc(k)320 1054 y
  } 2/Place PSfrag
 320 1054 a 407 1201
a
  {
 407 1201 a Fd(x)407 1201 y
  } 3/Place PSfrag
 407 1201 a 378 1313 a
  {
 378
1313 a Ff(w)378 1313 y
  } 4/Place PSfrag
 378 1313 a 390 1426 a
  {
 390 1426
a Ff(q)390 1426 y
  } 5/Place PSfrag
 390 1426 a 408 1522 a
  {
 408 1522 a Fd(y)408
1522 y
  } 6/Place PSfrag
 408 1522 a 382 1652 a
  {
 382 1652 a Fd(O)382 1652
y
  } 7/Place PSfrag
 382 1652 a 408 1764 a
  {
 408 1764 a -12 w Fe(~)-33 b Fd(v)408
1764 y
  } 8/Place PSfrag
 408 1764 a 413 1872 a
  {
 413 1872 a Fd(z)413 1872
y
  } 9/Place PSfrag
 413 1872 a 403 1991 a
  {
 403 1991 a Fi(0)403 1991 y
  } 10/Place PSfrag
 403
1991 a 403 2105 a
  {
 403 2105 a Fi(1)403 2105 y
  } 11/Place PSfrag
 403 2105
a 403 2217 a
  {
 403 2217 a Fd(h)403 2217 y
  } 12/Place PSfrag
 403 2217 a 418
2330 a
  {
 418 2330 a Fd(l)418 2330 y
  } 13/Place PSfrag
 418 2330 a 370 2430
a
  {
 370 2430 a Fd(k)410 2444 y Fa(1)370 2430 y
  } 14/Place PSfrag
 370 2430
a 371 2543 a
  {
 371 2543 a Fd(k)411 2557 y Fa(2)371 2543
y
  } 15/Place PSfrag
 371 2543 a 382 2668 a
  {
 382 2668 a Fd(O)382 2668 y
  } 16/Place PSfrag
 382
2668 a 382 2782 a
  {
 382 2782 a Fd(m)382 2782 y
  } 17/Place PSfrag
 382 2782
a 369 2896 a
  {
 369 2896 a Fd(M)369 2896 y
  } 18/Place PSfrag
 369 2896 a 392
3008 a
  {
 392 3008 a Fd(R)392 3008 y
  } 19/Place PSfrag
 392 3008 a 392 3121
a
  {
 392 3121 a Fd(P)392 3121 y
  } 20/Place PSfrag
 392 3121 a 386 3214 a
  {
 386
3214 a Ff(j)386 3214 y
  } 21/Place PSfrag
 386 3214 a 382 3346 a
  {
 382 3346
a Fd(m)382 3346 y
  } 22/Place PSfrag
 382 3346 a 357 3442 a
  {
 357 3442 a -40
x Fh(\000)-71 b(!)380 3442 y Fd(g)357 3442 y
  } 23/Place PSfrag
 357 3442
a 1920 5225 a Fi(1)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
